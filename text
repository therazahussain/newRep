<!-- import React, { useState } from 'react'
import "./XRay.css"

const XRay = () => {
  const [role, setRole] = useState("");
  const [coustomRole, setCoustomRole] = useState("");
  const [designation, setDesignation] = useState("");
  const [selectedDesignations, setSelectedDesignations] = useState([]);
  const [newRole, setNewRole] = useState(false);
  const [mandatoryValue, setMandatoryValue] = useState('');
  const [mandatoryWords, setMandatory] = useState([]);
  const [eitherKeyword, seteitherKeyword] = useState(['']);
  const [selectBetween, setSelectBetween] = useState(designation);

  const roles = ["Java", "Python", "C#", "UI Developer", "UI Developer", "Data Engineer", "MERN", "MEAN", "Machine Leaning Engineer", "Devops / ", "Android Developer", "IOS Developer"];

  const designationValues = [{
    title: "Junior-Mid",
    value: ["Software Engineer", "Software Developer", "SDE", "SDE 1", "SDE I", "Software Developer Engineer 1", "Software Development Engineer I"]
  },
  {
    title: "Mid-Senior",
    value: ["Senior Software Engineer", "Senior Software Developer", "SDE 2", "SDE 3", "SDE II", "SDE III", "Software Developer Engineer 2", "Software Development Engineer II", "Software Developer Engineer 3", "Software Development Engineer III", "MTS", "Member Technical Staff"]
  },
  {
    title: "Lead",
    value: ["Not Specified"]
  },
  {
    title: "Software Engineer",
    value: ["Not Specified"]
  },
  {
    title: "Principal Engineer/Architect",
    value: ["Not Specified"]
  }
  ];


  const handleRole = (e) => {
    setRole(e.target.value);
  }

  const handleCoustomRole = (e) => {
    setCoustomRole(e.target.value);
  }

  const handleMandatoryKeyWords = (event) => {
    setMandatoryValue(event.target.value);
  };

  const handleInputKeyPress = (event) => {
    if (event.key === 'Enter') {
      event.preventDefault();
      addValue(mandatoryValue);
    }
  };

  const addValue = (value) => {
    if (!value || mandatoryWords.includes(value)) {
      return;
    }
    setMandatory([...mandatoryWords, value]);
    setMandatoryValue('');
  };

  const removeValue = (value) => {
    const newValues = mandatoryWords.filter((v) => v !== value);
    setMandatory(newValues);
  };

  const handleInputChange = (event, index) => {
    const newInputValues = [...eitherKeyword];
    newInputValues[index] = event.target.value;
    seteitherKeyword(newInputValues);
  };

  const handleAddClick = (e) => {
    e.preventDefault()
    seteitherKeyword([...eitherKeyword, '']);
  };

  const handleKeyPress = (event) => {
    if (event.key === "Enter") {
      event.preventDefault();
    }
  }

  const handleDesignation = (event) => {
    setDesignation(event.target.value);
  }

  const handleDesignationChange = (event) => {
    const selectedValue = event.target.value;
    if (event.target.checked) {
      setSelectedDesignations([...selectedDesignations, selectedValue]);
    } else {
      setSelectedDesignations(selectedDesignations.filter(value => value !== selectedValue));
    }
  }

  const tagElements = mandatoryWords.map((value) => (
    <span key={value} className="value-tag">
      {value}
      <button className="remove-button" onClick={() => removeValue(value)}>
        X
      </button>
    </span>
  ));

  const inputFields = eitherKeyword.map((value, index) => (
    <div key={index}>
      <input
        type="text"
        id={`text-input-${index}`}
        value={value}
        onChange={(event) => handleInputChange(event, index)}
        onKeyDown={handleKeyPress}
      />
    </div>
  ));

  const handleSubmit = (event) => {
    event.preventDefault();
    // do something with the form data
  }

  return (
    <form action="" autoComplete='off' onSubmit={handleSubmit}>

      <div>
        <label htmlFor="role">Select  a Role: </label>
        <select name="Role" id="role" value={role} onChange={handleRole}>
          <option value="">{newRole ? coustomRole : "-- Please select --"}</option>
          {roles.map((role, index) => <option key={index} value={role}>{role}</option>)}
          <option value="coustom">Add New Role</option>
        </select>
      </div>

      <div hidden={role === "coustom" ? false : true}>
        <label htmlFor="newRole">Add Coustom Role: </label>
        <input type="text" id='newRole' onChange={handleCoustomRole} />
      </div>


      <div>
        <label htmlFor="experiance">Select Experiance: </label>
        <select name="Experiance" id="experiance">
          <option value="">-- Please select --</option>
          <option value="1+ years * experience">(1-3) Years</option>
          <option value="3+ years * experience">(3-5) Years</option>
          <option value="5+ years * experience">(5-8) Years</option>
          <option value="5+ years * experience">(8-12) Years</option>
          <option value="5+ years * experience">12+ Years</option>
        </select>
      </div>


      <div>
        <label htmlFor="designation">Select Designation: </label>
        <select name="designation" id="designation" value={designation} onChange={handleDesignation}>
          <option value="">-- Please select --</option>
          {
            designationValues.map((desVal, index) => <option key={index} value={desVal.value}>{desVal.title}</option>)
          }
        </select>
      </div>

      {
        designation !== "" &&
        <div>
          {selectedDesignations.map((value, index) => {
            <label key={index}>
              <input
                type="checkbox"
                value={value}
                onChange={handleDesignationChange}
              />
              {value}
            </label>
          })}
        </div>
      }

      <div>
        <label htmlFor="Location">Enter Location: </label>
        <input type="text" id="location" onKeyDown={handleKeyPress} />
      </div>

      <div>
        <div className="value-tags">{tagElements}</div>
        <label htmlFor="value-input">Enter Mandatory Keywords:</label>
        <input
          type="text"
          id="value-input"
          value={mandatoryValue}
          onChange={handleMandatoryKeyWords}
          onKeyDown={handleInputKeyPress}
        />

      </div>


      <div>
        <label htmlFor="">Enter Either Keywords:</label>
        {inputFields}
        <button onClick={handleAddClick}>Add</button>
      </div>


      <div>
        <label htmlFor="femaleCandidates">Female Candidates:</label>
        <input
          id="femaleCandidates"
          type="checkbox"
        />
      </div>

    </form>
  )
}

export default XRay -->